{"version":3,"sources":["docs/js/app.js"],"names":["angular","module","config","$httpProvider","$locationProvider","html5Mode","hashPrefix","run","$rootScope","controller","$scope","AudioSound","onChange","params","renderer","setClearColor","options","colors","background","audio","volume","audioVolume","OBJECTS","circles","material","color","setHex","lines","display","add","remove","dots","animateVertexAtIndex","v","i","d","rows","audioStrength","noiseStrength","r","Math","floor","c","b","abs","dr","dc","drc","index","bands","pow","sound","data","scale","ni","level","noiseMap","z","max","getObjectCircles","console","log","scene","object","state","adding","Date","now","removing","enabled","tween","kill","TweenLite","to","duration","delay","ease","Power2","easeInOut","onComplete","update","circularStrength","forEach","points","ai","na","noise","cpow","radius","x","y","circle","l","geometry","verticesNeedUpdate","lookAt","camera","position","THREE","Object3D","LineBasicMaterial","space","length","Geometry","LineLoop","Array","fill","push","map","n","angle","PI","rad","point","Vector3","cos","sin","vertices","getObjectDots","PointsMaterial","size","sizeAttenuation","Points","t","vertex","getObjectLines","line","Line","analyserData","analyser","getByteFrequencyData","loop","stats","begin","render","end","requestAnimationFrame","controls","addListeners","onWindowResize","width","window","innerWidth","height","innerHeight","w2","h2","setSize","aspect","updateProjectionMatrix","addEventListener","ImprovedNoise","fade","lerp","a","grad","hash","h","u","p","floorX","floorY","floorZ","X","Y","Z","xMinus1","yMinus1","zMinus1","w","A","AA","AB","B","BA","BB","Number","prototype","mod","this","stepper","tweenTo","callback","setStep","previous","current","steps","setTimeout","next","min","extend","gui","fov","ratio","near","far","container","audioUrl","notes","randomize","__controllers","__min","value","__max","random","property","updateDisplay","__color","g","setValue","hex","Uint8Array","perlin","quality","j","Scene","PerspectiveCamera","WebGLRenderer","alpha","antialias","logarithmicDepthBuffer","shadowMap","document","getElementById","appendChild","domElement","Stats","dom","dat","GUI","closed","Circles","Lines","Dots","addColor","play","factory","$q","path","defaultOptions","setVolume","ctx","createAnalyser","fftSize","frequencyBinCount","_AudioContext","AudioContext","webkitAudioContext","buffers","translateVolume","inverse","load","deferred","defer","xhr","XMLHttpRequest","responseType","open","onload","decodeAudioData","response","buffer","reject","resolve","onerror","error","send","promise","getBuffer","then","getSource","source","createBufferSource","gainNode","createGain","createGainNode","gain","connect","destination","start","noteOn","stop","noteOff","getVolume"],"mappings":"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","file":"app.min.js","sourcesContent":["/* global angular */\n\n(function() {\n    \"use strict\";\n\n    var app = angular.module('app', ['ngRoute', 'jsonFormatter']);\n\n}());\n/* global angular */\n\n(function() {\n    \"use strict\";\n\n    var app = angular.module('app');\n\n    app.config(['$httpProvider', function($httpProvider) {\n        // $httpProvider.defaults.withCredentials = true;\n    }]);\n\n}());\n/* global angular */\n\n(function() {\n    \"use strict\";\n\n    var app = angular.module('app');\n\n    app.config(['$locationProvider', function($locationProvider) {\n\n        // HTML5 MODE url writing method (false: #/anchor/use, true: /html5/url/use)\n        $locationProvider.html5Mode(true);\n        $locationProvider.hashPrefix('');\n\n    }]);\n\n}());\n/* global angular */\n\n(function() {\n    \"use strict\";\n\n    var app = angular.module('app');\n\n    app.run(['$rootScope', function($rootScope) {\n\n    }]);\n\n}());\n/* global angular */\n\n(function() {\n    \"use strict\";\n\n    var app = angular.module('app');\n\n    app.controller('RootCtrl', ['$scope', 'AudioSound', function($scope, AudioSound) {\n\n        var sound = new AudioSound('audio/07-rossini-192.mp3', {\n            loop: true,\n            analyser: true,\n        });\n\n        var OBJECTS = {};\n\n        Number.prototype.mod = function(n) {\n            return ((this % n) + n) % n;\n        };\n\n        function getStepper() {\n            var stepper = {\n                pow: 0,\n                duration: 1.500, // sec\n            };\n\n            var steps = new Array(24).fill().map(function(v, i) {\n                return i + 1;\n            });\n\n            var current = 0;\n\n            function tweenTo(pow, callback) {\n                if (stepper.tween) {\n                    stepper.tween.kill();\n                    stepper.tween = null;\n                }\n                stepper.tween = TweenLite.to(stepper, stepper.duration, {\n                    pow: pow,\n                    delay: 0,\n                    ease: Power2.easeInOut,\n                    onComplete: function() {\n                        if (callback) {\n                            callback();\n                        }\n                    },\n                });\n            }\n\n            function setStep(index) {\n                var previous = stepper.current || 0;\n                stepper.current = index;\n                var circle = OBJECTS.circles[index] || getObjectCircles(index);\n                circle.add();\n                OBJECTS.circles[index] = circle;\n                tweenTo(index / steps.length, function() {\n                    stepper.tween = null;\n                });\n                setTimeout(function() {\n                    if (previous !== stepper.current) {\n                        var circle = OBJECTS.circles[previous];\n                        if (circle) {\n                            circle.remove();\n                        }\n                    }\n                }, stepper.duration * 1000);\n            }\n\n            function next() {\n                current++;\n                current = Math.min(steps.length - 1, current);\n                // current = current % steps.length;\n                setStep(current);\n            }\n\n            function previous() {\n                current--;\n                current = Math.max(0, current);\n                // current = current % steps.length;\n                setStep(current);\n            }\n            return angular.extend(stepper, {\n                steps: steps,\n                current: current,\n                next: next,\n                previous: previous,\n            });\n        }\n\n        var stepper = getStepper();\n        $scope.stepper = stepper;\n\n        var analyser, analyserData, audio;\n        var stats, gui, scene, camera, fov, ratio, near, far, shadow, back, light, renderer, container, width, height, w2, h2, mouse = { x: 0, y: 0 };\n        var controls = null;\n\n        var options = {\n            audioUrl: \"audio/rossini-192.mp3\",\n            audioVolume: 0.5,\n            colors: {\n                background: 0x111111, // 0xffffff,\n                lines: 0x999999, // 0x888888,\n                notes: 0x444444, // 0xaaaaaa,\n            },\n            bands: 256,\n            rows: 128,\n            space: 10,\n            audioStrength: 60,\n            noiseStrength: 25,\n            circularStrength: 0.90,\n            display: '0',\n            randomize: function() {\n                for (var i = 0; i < gui.__controllers.length; i++) {\n                    var c = gui.__controllers[i];\n                    if (c.__min) {\n                        var value = c.__min + (c.__max - c.__min) * Math.random();\n                        this[c.property] = value;\n                        c.updateDisplay();\n                    }\n                    if (c.__color) {\n                        c.__color.r = Math.floor(Math.random() * 255);\n                        c.__color.g = Math.floor(Math.random() * 255);\n                        c.__color.b = Math.floor(Math.random() * 255);\n                        c.updateDisplay();\n                        c.setValue(c.__color.hex);\n                    }\n                }\n            }\n        };\n\n        options.points = new Array(options.bands * 2).fill(null).map(function() {\n            var r = 1000,\n                d = r * 2;\n            return new THREE.Vector3(-r + Math.random() * d, -r + Math.random() * d, -r + Math.random() * d);\n        });\n        options.noiseMap = getPerlinNoise(options.rows, options.rows);\n\n        function onChange(params) {\n            renderer.setClearColor(options.colors.background, 1);\n            if (audio) {\n                audio.volume = options.audioVolume;\n            }\n            if (OBJECTS.circles) {\n                OBJECTS.circles.material.color.setHex(options.colors.lines);\n                if (options.display === '0') {\n                    OBJECTS.circles.add();\n                } else {\n                    OBJECTS.circles.remove();\n                }\n            }\n            if (OBJECTS.lines) {\n                OBJECTS.lines.material.color.setHex(options.colors.lines);\n                if (options.display === '1') {\n                    OBJECTS.lines.add();\n                } else {\n                    OBJECTS.lines.remove();\n                }\n            }\n            if (OBJECTS.dots) {\n                OBJECTS.dots.material.color.setHex(options.colors.lines);\n                if (options.display === '2') {\n                    OBJECTS.dots.add();\n                } else {\n                    OBJECTS.dots.remove();\n                }\n            }\n        }\n\n        function createLights() {\n            light = new THREE.HemisphereLight(0xffffff, 0xffffff, 0.5);\n            shadow = new THREE.DirectionalLight(0xffffff, 0.8);\n            shadow.position.set(200, 200, 200);\n            shadow.castShadow = true;\n            // shadow.shadowDarkness = .2;\n            back = new THREE.DirectionalLight(0xffffff, 0.4);\n            back.position.set(-100, 200, 50);\n            // back.shadowDarkness = .2;\n            back.castShadow = true;\n            scene.add(light);\n            scene.add(shadow);\n            scene.add(back);\n        }\n\n        function createScene() {\n            width = window.innerWidth;\n            height = window.innerHeight;\n            ratio = width / height;\n            w2 = width / 2;\n            h2 = height / 2;\n            fov = 60;\n            near = 0.001;\n            far = 20000;\n\n            scene = new THREE.Scene();\n            // scene.fog = new THREE.Fog(0x000000, 300, 1000);\n\n            camera = new THREE.PerspectiveCamera(fov, ratio, near, far);\n            camera.position.z = 100;\n            camera.position.y = -500;\n            camera.lookAt(new THREE.Vector3(0, 0, 0));\n            renderer = new THREE.WebGLRenderer({\n                alpha: true,\n                antialias: true,\n                logarithmicDepthBuffer: true\n            });\n            renderer.setClearColor(0x000000, 0); // the default\n            // renderer.setClearColor(options.colors.background, 1);\n            renderer.setSize(width, height);\n            renderer.shadowMap.enabled = true;\n            container = document.getElementById('scene');\n            container.appendChild(renderer.domElement);\n\n            stats = new Stats();\n            container.appendChild(stats.dom);\n\n            addListeners();\n            // controls = new THREE.OrbitControls(camera, renderer.domElement);\n        }\n\n        function animateVertexAtIndex(v, i, d) {\n            var rows = options.rows,\n                audioStrength = options.audioStrength,\n                noiseStrength = options.noiseStrength;\n            var r = Math.floor(i / rows);\n            var c = i - r * rows;\n            var b = Math.abs(c - rows / 2) * 2;\n            var dr = 1 - (Math.abs(r - rows / 2) / (rows / 2));\n            var dc = 1 - (Math.abs(c - rows / 2) / (rows / 2));\n            var drc = (dr + dc) / 2;\n            var index = b % options.bands;\n            // var pow = analyserData[index];\n            var pow = sound.data[index];\n            var scale = (pow / options.bands) * dr * 2;\n            var ni = r * rows + ((c + d) % rows);\n            var level = (options.noiseMap[ni] / 64 * noiseStrength) * drc + (audioStrength * scale);\n            v.z += (level - v.z) / (3 + 3 * Math.max(0.000001, 1 - drc));\n        }\n\n        function getObjectCircles() {\n            var geometry, material, object, circles = [];\n\n            object = new THREE.Object3D();\n\n            material = new THREE.LineBasicMaterial({\n                color: options.colors.lines\n            });\n\n            var rows = options.rows,\n                space = options.space;\n            while (circles.length < options.rows) {\n                geometry = new THREE.Geometry();\n                var circle = new THREE.LineLoop(geometry, material);\n                circle.points = new Array(rows).fill(null);\n                // var spline = new THREE.CatmullRomCurve3(points);\n                // circle.spline = spline;\n                circles.push(circle);\n                object.add(circle);\n            }\n            var points = new Array(rows * rows).fill(null).map(function(n, i) {\n                var r = Math.floor(i / rows);\n                var c = i - r * rows;\n                var angle = 2 * Math.PI / rows;\n                var rad = angle * r + angle * c * 0.1;\n                var point = new THREE.Vector3();\n                point.r = {\n                    x: Math.cos(rad),\n                    y: Math.sin(rad),\n                    z: 96 + (c * c * c * 0.0001),\n                };\n                circles[c].points[r] = point;\n                circles[c].geometry.vertices.push(point);\n                return point;\n            });\n\n            var state = {\n                pow: 0,\n                duration: 0.350,\n                enabled: false,\n                adding: false,\n                removing: false,\n            };\n\n            var to = null;\n\n            function add() {\n                console.log('OBJECTS.circles.add');\n                scene.add(object);\n                state.adding = Date.now();\n                state.removing = false;\n                state.enabled = true;\n                if (state.tween) {\n                    state.tween.kill();\n                }\n                state.tween = TweenLite.to(state, state.duration, {\n                    pow: 1,\n                    delay: 0,\n                    ease: Power2.easeInOut,\n                    onComplete: function() {\n                        state.adding = false;\n                    },\n                });\n            }\n\n            function remove() {\n                console.log('OBJECTS.circles.remove');\n                state.adding = false;\n                state.removing = Date.now();\n                if (state.tween) {\n                    state.tween.kill();\n                }\n                state.tween = TweenLite.to(state, state.duration, {\n                    pow: 0,\n                    delay: 0,\n                    ease: Power2.easeInOut,\n                    onComplete: function() {\n                        state.removing = false;\n                        state.enabled = false;\n                        scene.remove(object);\n                    },\n                });\n            }\n\n            var d = 0;\n\n            function update() {\n                var rows = options.rows,\n                    audioStrength = options.audioStrength,\n                    noiseStrength = options.noiseStrength,\n                    circularStrength = options.circularStrength;\n                angular.forEach(points, function(v, i) {\n                    // animateVertexAtIndex(v, i, d);\n                    var r = Math.floor(i / rows);\n                    var c = i - r * rows;\n                    var b = Math.abs(c - rows / 2) * 2;\n                    var dr = 1 - (Math.abs(r - rows / 2) / (rows / 2));\n                    var dc = 1 - (Math.abs(c - rows / 2) / (rows / 2));\n                    var drc = (dr + dc) / 2;\n                    var ai = r % options.bands;\n\n                    var pow = (sound.data[ai] + sound.data[rows - 1 - ai]) / 2;\n                    // var pow = (analyserData[ai] + analyserData[rows - 1 - ai]) / 2;\n                    var scale = pow / options.bands;\n                    var na = c * rows + ((r + d) % rows);\n                    var noise = options.noiseMap[na];\n                    var cpow = 1 - ((rows - c) / rows * circularStrength);\n                    var level = v.r.z + (noise / 64 * noiseStrength) * cpow + (audioStrength * 2 * scale * scale) * cpow;\n                    var radius = v.radius || level;\n                    radius += (level - radius) / 2;\n                    v.x = v.r.x * radius;\n                    v.y = v.r.y * radius;\n                    v.z = 0; // -c;\n                    v.radius = radius;\n                });\n                angular.forEach(circles, function(circle, l) {\n                    // var points = circle.points;\n                    // var spline = circle.spline;\n                    // spline.getPoints(rows * 2);\n                    // circle.geometry.vertices = points;\n                    // geometry.computeLineDistances();\n                    // geometry.lineDistancesNeedUpdate = true;\n                    circle.geometry.verticesNeedUpdate = true;\n                });\n                object.scale.x = object.scale.y = object.scale.z = 0.001 + 0.3 * state.pow;\n                object.lookAt(camera.position);\n                d++;\n            }\n\n            return {\n                add: add,\n                remove: remove,\n                update: update,\n                object: object,\n                material: material,\n                state: state,\n            };\n        }\n\n        function getObjectDots() {\n            var material = new THREE.PointsMaterial({\n                color: options.colors.lines,\n                size: 1,\n                sizeAttenuation: false,\n                // vertexColors: THREE.VertexColors,\n            });\n            var geometry = new THREE.Geometry();\n            var object = new THREE.Points(geometry, material);\n            var rows = options.rows,\n                space = options.space;\n            var points = new Array(rows * rows).fill(null).map(function(n, i) {\n                var r = Math.floor(i / rows);\n                var c = i - r * rows;\n                var dr = 1 - (Math.abs(r - rows / 2) / (rows / 2));\n                var dc = 1 - (Math.abs(c - rows / 2) / (rows / 2));\n                var drc = (dr + dc) / 2;\n                var idrc = 1 - drc;\n                return {\n                    x: -(space * rows / 2) + space * c,\n                    y: -(space * rows / 2) + space * r,\n                    z: 0,\n                };\n            });\n            var i = 0,\n                t = points.length;\n            while (i < t) {\n                var point = points[i];\n                var vertex = new THREE.Vector3();\n                vertex.x = point.x;\n                vertex.y = point.y;\n                vertex.z = point.z;\n                geometry.vertices.push(vertex);\n                // geometry.colors.push(new THREE.Color(0xffcc00));\n                i++;\n            }\n            // geometry.mergeVertices();\n            geometry.verticesNeedUpdate = true;\n            object.geometry = geometry;\n\n            function add() {\n                console.log('OBJECTS.dots.add');\n                scene.add(object);\n            }\n\n            function remove() {\n                console.log('OBJECTS.dots.remove');\n                scene.remove(object);\n            }\n\n            var d = 0;\n\n            function update() {\n                angular.forEach(geometry.vertices, function(v, i) {\n                    animateVertexAtIndex(v, i, d);\n                });\n                d++;\n                geometry.verticesNeedUpdate = true;\n            }\n\n            return {\n                object: object,\n                material: material,\n                add: add,\n                remove: remove,\n                update: update,\n            };\n        }\n\n        function getObjectLines() {\n            var object, material, lines = [];\n            material = new THREE.LineBasicMaterial({\n                color: options.colors.lines\n            });\n            object = new THREE.Object3D();\n            var rows = options.rows,\n                space = options.space;\n            while (lines.length < options.rows) {\n                var geometry = new THREE.Geometry();\n                var line = new THREE.Line(geometry, material);\n                line.points = new Array(rows).fill(null);\n                // var spline = new THREE.CatmullRomCurve3(points);\n                // line.spline = spline;\n                lines.push(line);\n                object.add(line);\n            }\n            var points = new Array(rows * rows).fill(null).map(function(n, i) {\n                var r = Math.floor(i / rows);\n                var c = i - r * rows;\n                var dr = 1 - (Math.abs(r - rows / 2) / (rows / 2));\n                var dc = 1 - (Math.abs(c - rows / 2) / (rows / 2));\n                var drc = (dr + dc) / 2;\n                var idrc = 1 - drc;\n                var point = new THREE.Vector3(-(space * rows / 2) + space * c, -(space * rows / 2) + space * r,\n                    0\n                );\n                lines[c].points[r] = point;\n                lines[c].geometry.vertices.push(point);\n                return point;\n            });\n\n            function add() {\n                console.log('OBJECTS.lines.add');\n                scene.add(object);\n            }\n\n            function remove() {\n                console.log('OBJECTS.lines.remove');\n                scene.remove(object);\n            }\n\n            var d = 0;\n\n            function update() {\n                var rows = options.rows,\n                    audioStrength = options.audioStrength,\n                    noiseStrength = options.noiseStrength;\n                angular.forEach(points, function(v, i) {\n                    animateVertexAtIndex(v, i, d);\n                });\n                angular.forEach(lines, function(line, l) {\n                    // var points = line.points;\n                    // var spline = line.spline;\n                    // spline.getPoints(rows * 2);\n                    // line.geometry.vertices = points;\n                    // geometry.computeLineDistances();\n                    // geometry.lineDistancesNeedUpdate = true;\n                    line.geometry.verticesNeedUpdate = true;\n                });\n                d++;\n            }\n            return {\n                add: add,\n                remove: remove,\n                update: update,\n                object: object,\n                material: material,\n            };\n        }\n\n        function createObjects() {\n            OBJECTS.dots = getObjectDots();\n            OBJECTS.lines = getObjectLines();\n            OBJECTS.circles = getObjectCircles();\n            // OBJECTS.notes = getNotes();\n        }\n\n        /*\n        function createAnalyser() {\n            var source, ctx, actx = (window.AudioContext || window.webkitAudioContext);\n            source = null;\n            ctx = new actx();\n            analyser = ctx.createAnalyser();\n            audio = new Audio();\n            audio.src = options.audioUrl;\n            audio.controls = true;\n            audio.addEventListener('canplay', function() {\n                var bufferLength;\n                console.log('audio canplay');\n                source = ctx.createMediaElementSource(audio);\n                source.connect(analyser);\n                source.connect(ctx.destination);\n                analyser.fftSize = options.bands * 2;\n                bufferLength = analyser.frequencyBinCount;\n                console.log('bufferLength', bufferLength);\n                analyserData = new Uint8Array(bufferLength);\n                return analyserData;\n            });\n            audio.volume = options.audioVolume;\n            return audio.play();\n        }\n\n*/\n\n        function update() {\n            // notes.rotation.z -= 0.0025;\n            // lines.rotation.z -= 0.0025;            \n            if (analyserData) {\n                analyser.getByteFrequencyData(analyserData);\n            }\n            // OBJECTS.notes.update();\n            if (options.display === '0') {\n                OBJECTS.circles ? OBJECTS.circles.update() : null;\n            } else if (options.display === '1') {\n                OBJECTS.lines ? OBJECTS.lines.update() : null;\n            } else if (options.display === '2') {\n                OBJECTS.dots ? OBJECTS.dots.update() : null;\n            }\n        }\n\n        function loop() {\n            stats.begin();\n            render();\n            stats.end();\n            requestAnimationFrame(loop);\n        }\n\n        function render() {\n            if (controls) {\n                controls.update();\n            }\n            sound.update();\n            update();\n            renderer.render(scene, camera);\n        }\n\n        createScene();\n        // createLights();\n        createObjects();\n        // createAnalyser();\n        addGui();\n        onChange();\n        loop();\n        sound.play();\n\n        function addGui() {\n            gui = new dat.GUI();\n            gui.closed = true;\n            gui.add(options, 'display', { Circles: 0, Lines: 1, Dots: 2 }).onChange(onChange);\n            gui.addColor(options.colors, 'background').onChange(onChange);\n            gui.addColor(options.colors, 'lines').onChange(onChange);\n            gui.add(options, 'audioVolume', 0.01, 1.0).onChange(onChange);\n            gui.add(options, 'audioStrength', 10, 100).onChange(onChange);\n            gui.add(options, 'noiseStrength', 10, 100).onChange(onChange);\n            gui.add(options, 'circularStrength', 0.01, 0.90).onChange(onChange);\n            gui.add(options, 'randomize');\n            return gui;\n        }\n\n        function addListeners() {\n            function handleMouseMove(event) {\n                mouse = { x: event.clientX, y: event.clientY };\n            }\n\n            function handleMouseDown(event) {\n                //\n            }\n\n            function handleMouseUp(event) {\n                //\n            }\n\n            function handleTouchStart(event) {\n                if (event.touches.length > 1) {\n                    event.preventDefault();\n                    mousePos = { x: event.touches[0].pageX, y: event.touches[0].pageY };\n                }\n            }\n\n            function handleTouchEnd(event) {\n                mousePos = { x: windowHalfX, y: windowHalfY };\n            }\n\n            function handleTouchMove(event) {\n                if (event.touches.length == 1) {\n                    event.preventDefault();\n                    mousePos = { x: event.touches[0].pageX, y: event.touches[0].pageY };\n                }\n            }\n\n            function onWindowResize() {\n                width = window.innerWidth;\n                height = window.innerHeight;\n                w2 = width / 2;\n                h2 = height / 2;\n                renderer.setSize(width, height);\n                camera.aspect = width / height;\n                camera.updateProjectionMatrix();\n            }\n            window.addEventListener('resize', onWindowResize, false);\n            /*\n            document.addEventListener('mousemove', handleMouseMove, false);\n            document.addEventListener('mousedown', handleMouseDown, false);\n            document.addEventListener('mouseup', handleMouseUp, false);\n            document.addEventListener('touchstart', handleTouchStart, false);\n            document.addEventListener('touchend', handleTouchEnd, false);\n            document.addEventListener('touchmove', handleTouchMove, false);\n            */\n        }\n\n        function getSprite() {\n            var canvas = document.createElement('canvas');\n            canvas.width = 128;\n            canvas.height = 128;\n            var ctx = canvas.getContext('2d');\n            var gradient = ctx.createRadialGradient(\n                canvas.width / 2,\n                canvas.height / 2,\n                0,\n                canvas.width / 2,\n                canvas.height / 2,\n                canvas.width / 2\n            );\n            /*\n            gradient.addColorStop(0, 'rgba(0,0,0,1)');\n            gradient.addColorStop(0.2, 'rgba(0,0,0,1)');\n            gradient.addColorStop(0.22, 'rgba(0,0,0,.2)');\n            gradient.addColorStop(1, 'rgba(0,0,0,0)');\n            ctx.fillStyle = gradient;\n            */\n            ctx.fillStyle = \"#000000\";\n            ctx.fillRect(0, 0, canvas.width, canvas.height);\n            return canvas;\n        }\n\n        function getPerlinNoise(width, height) {\n            var size = width * height,\n                data = new Uint8Array(size),\n                perlin = new ImprovedNoise(),\n                quality = 1,\n                z = Math.random() * 100;\n            for (var j = 0; j < 4; j++) {\n                for (var i = 0; i < size; i++) {\n                    var x = i % width,\n                        y = ~~(i / width);\n                    data[i] += Math.abs(perlin.noise(x / quality, y / quality, z) * quality * 1.75);\n                }\n                quality *= 5;\n            }\n            return data;\n        }\n\n        function ImprovedNoise() {\n            var p = [151, 160, 137, 91, 90, 15, 131, 13, 201, 95, 96, 53, 194, 233, 7, 225, 140, 36, 103, 30, 69, 142, 8, 99, 37, 240, 21, 10,\n                23, 190, 6, 148, 247, 120, 234, 75, 0, 26, 197, 62, 94, 252, 219, 203, 117, 35, 11, 32, 57, 177, 33, 88, 237, 149, 56, 87,\n                174, 20, 125, 136, 171, 168, 68, 175, 74, 165, 71, 134, 139, 48, 27, 166, 77, 146, 158, 231, 83, 111, 229, 122, 60, 211,\n                133, 230, 220, 105, 92, 41, 55, 46, 245, 40, 244, 102, 143, 54, 65, 25, 63, 161, 1, 216, 80, 73, 209, 76, 132, 187, 208,\n                89, 18, 169, 200, 196, 135, 130, 116, 188, 159, 86, 164, 100, 109, 198, 173, 186, 3, 64, 52, 217, 226, 250, 124, 123, 5,\n                202, 38, 147, 118, 126, 255, 82, 85, 212, 207, 206, 59, 227, 47, 16, 58, 17, 182, 189, 28, 42, 223, 183, 170, 213, 119,\n                248, 152, 2, 44, 154, 163, 70, 221, 153, 101, 155, 167, 43, 172, 9, 129, 22, 39, 253, 19, 98, 108, 110, 79, 113, 224, 232,\n                178, 185, 112, 104, 218, 246, 97, 228, 251, 34, 242, 193, 238, 210, 144, 12, 191, 179, 162, 241, 81, 51, 145, 235, 249,\n                14, 239, 107, 49, 192, 214, 31, 181, 199, 106, 157, 184, 84, 204, 176, 115, 121, 50, 45, 127, 4, 150, 254, 138, 236, 205,\n                93, 222, 114, 67, 29, 24, 72, 243, 141, 128, 195, 78, 66, 215, 61, 156, 180\n            ];\n            for (var i = 0; i < 256; i++) {\n                p[256 + i] = p[i];\n            }\n\n            function fade(t) {\n                return t * t * t * (t * (t * 6 - 15) + 10);\n            }\n\n            function lerp(t, a, b) {\n                return a + t * (b - a);\n            }\n\n            function grad(hash, x, y, z) {\n                var h = hash & 15;\n                var u = h < 8 ? x : y,\n                    v = h < 4 ? y : h == 12 || h == 14 ? x : z;\n                return ((h & 1) === 0 ? u : -u) + ((h & 2) === 0 ? v : -v);\n            }\n\n            return {\n                noise: function(x, y, z) {\n                    var floorX = Math.floor(x),\n                        floorY = Math.floor(y),\n                        floorZ = Math.floor(z);\n                    var X = floorX & 255,\n                        Y = floorY & 255,\n                        Z = floorZ & 255;\n                    x -= floorX;\n                    y -= floorY;\n                    z -= floorZ;\n                    var xMinus1 = x - 1,\n                        yMinus1 = y - 1,\n                        zMinus1 = z - 1;\n                    var u = fade(x),\n                        v = fade(y),\n                        w = fade(z);\n                    var A = p[X] + Y,\n                        AA = p[A] + Z,\n                        AB = p[A + 1] + Z,\n                        B = p[X + 1] + Y,\n                        BA = p[B] + Z,\n                        BB = p[B + 1] + Z;\n                    return lerp(w, lerp(v, lerp(u, grad(p[AA], x, y, z),\n                                grad(p[BA], xMinus1, y, z)),\n                            lerp(u, grad(p[AB], x, yMinus1, z),\n                                grad(p[BB], xMinus1, yMinus1, z))),\n                        lerp(v, lerp(u, grad(p[AA + 1], x, y, zMinus1),\n                                grad(p[BA + 1], xMinus1, y, z - 1)),\n                            lerp(u, grad(p[AB + 1], x, yMinus1, zMinus1),\n                                grad(p[BB + 1], xMinus1, yMinus1, zMinus1))));\n\n                }\n            };\n        }\n\n\n\n        //////////\n\n        function addNotes() {\n            // alert('onChange', params);\n            /*\n            var dx = 10 - 10 * params.dispersion * (1 - params.bulge);\n            var dy = 10 - 10 * params.dispersion * (1 - params.bulge);\n            var dz = 40 - 40 * params.dispersion * (1 - params.bulge);\n            */\n            var geometry = new THREE.Geometry();\n            // geometry.vertices.splice(0, geometry.vertices.length);\n            var points = options.points;\n            var i = 0,\n                t = points.length;\n            while (i < t) {\n                var p = points[i];\n                geometry.vertices.push(new THREE.Vector3(p.x, p.y, p.z));\n                // geometry.colors.push(new THREE.Color(0, 0, 0));\n                i++;\n            }\n            geometry.mergeVertices();\n            geometry.verticesNeedUpdate = true;\n            notes.geometry = geometry;\n            addSplines(points);\n        }\n\n        function addSplines(points) {\n            points = points.map(function(point) {\n                return new THREE.Vector3(point.x, point.y, point.z);\n            });\n            var spline = new THREE.CatmullRomCurve3(points);\n            var geometry = new THREE.Geometry();\n            geometry.vertices = spline.getPoints(5000);\n            // geometry.mergeVertices();\n            // geometry.verticesNeedUpdate = true;\n            // geometry.computeLineDistances();\n            // geometry.lineDistancesNeedUpdate = true;\n            lines.geometry = geometry;\n        }\n\n        /*\n        function getNotes() {\n            var object, geometry, material;\n            geometry = new THREE.Geometry();\n            texture = new THREE.CanvasTexture(getSprite());\n            material = new THREE.PointsMaterial({\n                size: 12,\n                map: texture,\n                vertexColors: THREE.VertexColors,\n                blending: THREE.AdditiveBlending,\n                depthTest: false,\n                transparent: true\n            });\n            material = new THREE.PointsMaterial({\n                color: options.colors.notes,\n                size: 2,\n                sizeAttenuation: false,\n            });\n            object = new THREE.Points(geometry, material);\n\n            var points = options.points;\n            var i = 0,\n                t = points.length;\n            while (i < t) {\n                var p = points[i];\n                geometry.vertices.push(new THREE.Vector3(p.x, p.y, p.z));\n                // geometry.colors.push(new THREE.Color(0, 0, 0));\n                i++;\n            }\n            geometry.mergeVertices();\n            geometry.verticesNeedUpdate = true;\n\n            function add() {\n                console.log('OBJECTS.notes.add');\n                scene.add(object);\n            }\n\n            function remove() {\n                console.log('OBJECTS.notes.remove');\n                scene.remove(object);\n            }\n\n            function update() {\n                angular.forEach(geometry.vertices, function(v, i) {\n                    var index = i % options.bands;\n                    var pow = analyserData[index];\n                    var scale = (pow / options.bands) * 2;\n                    var p = options.points[i];\n                    var vx = p.x * (1 + scale);\n                    var vy = p.y * (1 + scale);\n                    var vz = p.z * (1 + scale);\n                    v.x += (vx - v.x) / 3;\n                    v.y += (vy - v.y) / 3;\n                    v.z += (vz - v.z) / 3;\n                });\n                geometry.verticesNeedUpdate = true;\n            }\n            return {\n                add: add,\n                remove: remove,\n                update: update,\n                object: object,\n            };\n\n        }\n\n        function getLines() {\n            var object, geometry, material;\n\n            geometry = new THREE.Geometry();\n            material = new THREE.LineDashedMaterial({\n                color: options.colors.lines,\n                dashSize: 1,\n                gapSize: 0.5,\n            });\n            material = new THREE.LineBasicMaterial({\n                color: options.colors.lines\n            });\n            object = new THREE.Line(geometry, material);\n\n            function add() {\n                scene.add(object);\n            }\n\n            function remove() {\n                scene.remove(object);\n            }\n\n            function update() {\n\n            }\n            return {\n                add: add,\n                remove: remove,\n                update: update,\n                object: object,\n            };\n\n        }\n        */\n\n    }]);\n\n}());\n/* global angular */\n\n(function() {\n    \"use strict\";\n\n    var app = angular.module('app');\n\n    app.factory('AudioSound', ['$q', function($q) {\n\n        function AudioSound(path, options) {\n            var defaultOptions = {\n                volume: 85,\n                loop: false,\n            };\n            if (options) {\n                angular.extend(defaultOptions, options);\n            }\n            // var manager = AudioManager.getInstance();\n            var sound = this;\n            sound.path = path;\n            sound.options = defaultOptions;\n            // sound.manager = manager;\n            sound.setVolume(defaultOptions.volume);\n            // manager.add(sound);\n            if (sound.options.analyser) {\n                var analyser = ctx.createAnalyser();\n                analyser.fftSize = 256 * 2;\n                sound.data = new Uint8Array(analyser.frequencyBinCount);\n                sound.analyser = analyser;\n            }\n        }\n\n        var _AudioContext = window.AudioContext || window.webkitAudioContext;\n        var ctx = new _AudioContext();\n        var buffers = {};\n\n        AudioSound.translateVolume = function(volume, inverse) {\n            return inverse ? volume * 100 : volume / 100;\n        };\n\n        AudioSound.load = function(sound) {\n            var deferred = $q.defer();\n            var path = sound.path;\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = \"arraybuffer\";\n            xhr.open(\"GET\", path, true);\n            xhr.onload = function() {\n                // Asynchronously decode the audio file data in xhr.response\n                ctx.decodeAudioData(xhr.response, function(buffer) {\n                    if (!buffer) {\n                        console.log('AudioSound.load.decodeAudioData.error', path);\n                        deferred.reject('AudioSound.load.decodeAudioData.error');\n                        return;\n                    }\n                    console.log('AudioSound.decodeAudioData', path);\n                    buffers[path] = buffer;\n                    deferred.resolve(buffer);\n                });\n            };\n            xhr.onerror = function(error) {\n                console.log('AudioManager.xhr.onerror', error);\n                deferred.reject(error);\n            };\n            xhr.send();\n            return deferred.promise;\n        };\n\n        AudioSound.prototype = {\n            getBuffer: function() {\n                var deferred = $q.defer();\n                var path = this.path;\n                var buffer = buffers[path];\n                if (buffer) {\n                    deferred.resolve(buffer);\n                } else {\n                    AudioSound.load(this).then(function(buffer) {\n                        deferred.resolve(buffer);\n                    }, function(error) {\n                        deferred.reject(error);\n                    });\n                }\n                return deferred.promise;\n            },\n            getSource: function() {\n                var deferred = $q.defer();\n                var source = this.source;\n                if (source) {\n                    deferred.resolve(source);\n                } else {\n                    var sound = this;\n                    this.getBuffer().then(function(buffer) {\n                        var source = ctx.createBufferSource();\n                        var gainNode = ctx.createGain ? ctx.createGain() : ctx.createGainNode();\n                        gainNode.gain.value = sound.volume;\n                        source.buffer = buffer;\n                        source.connect(gainNode);\n                        if (sound.analyser) {\n                            source.connect(sound.analyser);\n                            // source.connect(ctx.destination);\n                        }\n                        gainNode.connect(ctx.destination);\n                        deferred.resolve(source);\n                    }, function(error) {\n                        deferred.reject(error);\n                    });\n                }\n                return deferred.promise;\n            },\n            play: function() {\n                var options = this.options;\n                this.getSource().then(function(source) {\n                    source.loop = options.loop;\n                    if (source.start) {\n                        source.start(0); // (0, 2, 1);\n                    } else {\n                        source.noteOn(0); // (0, 2, 1);\n                    }\n                });\n                console.log('AudioSound.play');\n            },\n            stop: function() {\n                this.getSource().then(function(source) {\n                    if (source.stop) {\n                        source.stop(0); // (0, 2, 1);\n                    } else {\n                        source.noteOff(0); // (0, 2, 1);\n                    }\n                });\n                console.log('AudioSound.stop');\n            },\n            getVolume: function() {\n                return AudioSound.translateVolume(this.volume, true);\n            },\n            // Expect to receive in range 0-100\n            setVolume: function(volume) {\n                this.volume = AudioSound.translateVolume(volume);\n            },\n            update: function() {\n                var sound = this;\n                if (sound.analyser) {\n                    sound.analyser.getByteFrequencyData(sound.data);\n                }\n            }\n        };\n\n        return AudioSound;\n    }]);\n\n}());"]}